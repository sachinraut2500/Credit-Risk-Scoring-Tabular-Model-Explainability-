# -*- coding: utf-8 -*-
"""Credit Risk Scoring (Tabular + Model Explainability).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pKYgrwW1BbCxeOcU-7lO2w31ebT7-_yO
"""

# credit_risk_scoring.py

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.metrics import classification_report, roc_auc_score
from sklearn.preprocessing import LabelEncoder
import shap
import matplotlib.pyplot as plt

def load_data():
    # Simulated dataset or use real-world datasets like LendingClub, Kaggle Credit Risk, etc.
    df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/GermanCredit.csv')
    return df

def preprocess_data(df):
    target = 'Class'
    X = df.drop(columns=[target])
    y = df[target]

    # Encode categorical features
    for col in X.select_dtypes(include='object').columns:
        X[col] = LabelEncoder().fit_transform(X[col])

    y = LabelEncoder().fit_transform(y)  # Good/Bad -> 0/1
    return X, y

def train_model(X_train, y_train):
    model = GradientBoostingClassifier()
    model.fit(X_train, y_train)
    return model

def explain_model(model, X_train):
    explainer = shap.Explainer(model)
    shap_values = explainer(X_train)
    shap.summary_plot(shap_values, X_train, show=False)
    plt.title("SHAP Feature Importance")
    plt.savefig("shap_summary_plot.png")

def main():
    print("Loading and preprocessing data...")
    df = load_data()
    X, y = preprocess_data(df)

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    print("Training model...")
    model = train_model(X_train, y_train)

    y_pred = model.predict(X_test)
    print(classification_report(y_test, y_pred))
    print("ROC AUC:", roc_auc_score(y_test, model.predict_proba(X_test)[:,1]))

    print("Explaining model predictions with SHAP...")
    explain_model(model, X_train)

if __name__ == "__main__":
    main()